<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Random" xml:space="preserve">
    <value>Your number:</value>
    <comment/>
  </data>
  <data name="RandomTitle" xml:space="preserve">
    <value>Random Number</value>
    <comment/>
  </data>
  <data name="HelpTitle" xml:space="preserve">
    <value>List of all commands:</value>
    <comment/>
  </data>
  <data name="HelpMainCommands" xml:space="preserve">
    <value>Main Commands</value>
    <comment/>
  </data>
  <data name="HelpMainCommandsList" xml:space="preserve">
    <value>random - A random number in a given range.	kick - Kick the user.	ban - Ban the user.	purge - Delete the specified number of messages.	language - Change current language.		flipcoin - Flip coin.	setprefix - Set custom prefix for bot. Only server administrator can do this.	resetprefix - Reset prefix to default. Only server administrator can do this.	forgotprefix - Remind custom prefix of the server, in case you forgot it. Use with default prefix a!	whatsnew - Sends changelog of the latest major update.</value>
    <comment/>
  </data>
  <data name="HelpFunCommands" xml:space="preserve">
    <value>Fun Commands</value>
    <comment/>
  </data>
  <data name="HelpFunCommandsList" xml:space="preserve">
    <value>hello - Say hi to the bot.	goodjob - Praise the bot.	chatviblyadkov - Send gif: Chat viblyadkov(Rus).	hug - Hug another user.	kiss - Kiss another user.	pat - Pat another user.	cry - Start crying.	slap - Slap another user.	lick - Lick another user.	chatgpt - Ask a question on ChatGPT. Might take some time, please be patient.	safegelbooru - Get post with your tags from Gelbooru. Filters NSFW content</value>
    <comment/>
  </data>
  <data name="NameError" xml:space="preserve">
    <value>Error</value>
    <comment/>
  </data>
  <data name="KickChooseUser" xml:space="preserve">
    <value>:x: You did not specify a user.</value>
    <comment/>
  </data>
  <data name="KickTitle" xml:space="preserve">
    <value>Kick user</value>
    <comment/>
  </data>
  <data name="NotEnoughRights" xml:space="preserve">
    <value>:x: You don't have enough rights!</value>
    <comment/>
  </data>
  <data name="KickAdministrator" xml:space="preserve">
    <value>:x: You can't kick an Administrator.</value>
    <comment/>
  </data>
  <data name="KickKicked" xml:space="preserve">
    <value>You were kicked from the server:</value>
    <comment/>
  </data>
  <data name="KickReason" xml:space="preserve">
    <value>Reason:</value>
    <comment/>
  </data>
  <data name="KickNoReason" xml:space="preserve">
    <value>Reason not specified.</value>
    <comment/>
  </data>
  <data name="KickKicked1" xml:space="preserve">
    <value>:white_check_mark: User</value>
    <comment/>
  </data>
  <data name="KickKicked2" xml:space="preserve">
    <value>was kicked from this server.</value>
    <comment/>
  </data>
  <data name="NameSuccess" xml:space="preserve">
    <value>Success.</value>
    <comment/>
  </data>
  <data name="BanTitle" xml:space="preserve">
    <value>Ban user</value>
    <comment/>
  </data>
  <data name="BanAdministrator" xml:space="preserve">
    <value>:x: You can't ban an Administrator.</value>
    <comment/>
  </data>
  <data name="BanBanned" xml:space="preserve">
    <value>You were banned from the server:</value>
    <comment/>
  </data>
  <data name="BanReason" xml:space="preserve">
    <value>Reason:</value>
    <comment/>
  </data>
  <data name="BanNoReason" xml:space="preserve">
    <value>Reason not specified.</value>
    <comment/>
  </data>
  <data name="BanBanned1" xml:space="preserve">
    <value>:white_check_mark: User</value>
    <comment/>
  </data>
  <data name="BanBanned2" xml:space="preserve">
    <value>was banned.</value>
    <comment/>
  </data>
  <data name="PurgeTitle" xml:space="preserve">
    <value>Purge chat</value>
    <comment/>
  </data>
  <data name="PurgeInvalidAmount" xml:space="preserve">
    <value>:x: Messages amount should be greater than 0.</value>
    <comment/>
  </data>
  <data name="PurgeInProgress" xml:space="preserve">
    <value>Purge in progress...</value>
    <comment/>
  </data>
  <data name="PurgeNoMessages" xml:space="preserve">
    <value>:x: There is no messages.</value>
    <comment/>
  </data>
  <data name="PurgeDone" xml:space="preserve">
    <value>:white_check_mark: Done. Purged</value>
    <comment/>
  </data>
  <data name="PurgeDone2" xml:space="preserve">
    <value>messages.</value>
    <comment/>
  </data>
  <data name="FlipCoinTitle" xml:space="preserve">
    <value>Flip coin</value>
    <comment/>
  </data>
  <data name="FlipCoinHeads" xml:space="preserve">
    <value>:coin: Heads.</value>
    <comment/>
  </data>
  <data name="FlipCoinTails" xml:space="preserve">
    <value>:coin: Tails.</value>
    <comment/>
  </data>
  <data name="CustomPrefixTitle" xml:space="preserve">
    <value>Custom prefix</value>
    <comment/>
  </data>
  <data name="SetPrefixNotEnoughArguments" xml:space="preserve">
    <value>:x: Specify your prefix.</value>
    <comment/>
  </data>
  <data name="SetPrefixDone" xml:space="preserve">
    <value>:white_check_mark: Done. Server prefix is now:</value>
    <comment/>
  </data>
  <data name="WhatsNew" xml:space="preserve">
    <value>To be added.</value>
    <comment/>
  </data>
  <data name="ResetPrefixTitle" xml:space="preserve">
    <value>Reset prefix</value>
    <comment/>
  </data>
  <data name="ResetPrefixDone" xml:space="preserve">
    <value>Done. Prefix was reset to default "a!".</value>
    <comment/>
  </data>
  <data name="ForgotPrefix" xml:space="preserve">
    <value>This server prefix:</value>
    <comment/>
  </data>
  <data name="HelloTitle" xml:space="preserve">
    <value>Greetings</value>
    <comment/>
  </data>
  <data name="HelloMsg" xml:space="preserve">
    <value>Hello,</value>
    <comment/>
  </data>
  <data name="GoodJobTitle" xml:space="preserve">
    <value>Good Job</value>
    <comment/>
  </data>
  <data name="GoodJobMsg" xml:space="preserve">
    <value>Thank you, it means a lot to me!</value>
    <comment/>
  </data>
  <data name="YouAreCuteTitle" xml:space="preserve">
    <value>You are cute</value>
    <comment/>
  </data>
  <data name="YouAreCuteMsg" xml:space="preserve">
    <value>Thanks for the compliment ;)</value>
    <comment/>
  </data>
  <data name="HugNull" xml:space="preserve">
    <value>Hugged themself...?</value>
    <comment/>
  </data>
  <data name="HugMention" xml:space="preserve">
    <value>hugged</value>
    <comment/>
  </data>
  <data name="HugMention2" xml:space="preserve">
    <value>How cute!</value>
    <comment/>
  </data>
  <data name="HugTitle" xml:space="preserve">
    <value>Hug</value>
    <comment/>
  </data>
  <data name="KissTitle" xml:space="preserve">
    <value>Kiss</value>
    <comment/>
  </data>
  <data name="KissNull" xml:space="preserve">
    <value>kissed themself...? What?</value>
    <comment/>
  </data>
  <data name="KissMention" xml:space="preserve">
    <value>kissed</value>
    <comment/>
  </data>
  <data name="PatTitle" xml:space="preserve">
    <value>Pat</value>
    <comment/>
  </data>
  <data name="PatNull" xml:space="preserve">
    <value>patted themself... That's just sad...</value>
    <comment/>
  </data>
  <data name="PatMention" xml:space="preserve">
    <value>patted</value>
    <comment/>
  </data>
  <data name="CryTitle" xml:space="preserve">
    <value>Cry</value>
    <comment/>
  </data>
  <data name="CryMsg" xml:space="preserve">
    <value>cries.</value>
    <comment/>
  </data>
  <data name="SlapTitle" xml:space="preserve">
    <value>Slap</value>
    <comment/>
  </data>
  <data name="SlapNull" xml:space="preserve">
    <value>slapped themself... Why?</value>
    <comment/>
  </data>
  <data name="SlapMention" xml:space="preserve">
    <value>slapped</value>
    <comment/>
  </data>
  <data name="SlapMention2" xml:space="preserve">
    <value>How rude!</value>
    <comment/>
  </data>
  <data name="LickTitle" xml:space="preserve">
    <value>Lick</value>
    <comment/>
  </data>
  <data name="LickNull" xml:space="preserve">
    <value>licked themself...?</value>
    <comment/>
  </data>
  <data name="LickMention" xml:space="preserve">
    <value>licked</value>
    <comment/>
  </data>
  <data name="GPTTitle" xml:space="preserve">
    <value>ChatGPT</value>
    <comment/>
  </data>
  <data name="GPTAskNull" xml:space="preserve">
    <value>:warning: Please provide your question.</value>
    <comment/>
  </data>
  <data name="GPTAsk" xml:space="preserve">
    <value>:ok_hand: OK! I'll try to ask ChatGPT. It might take some time.</value>
    <comment/>
  </data>
  <data name="GPTAskResponse" xml:space="preserve">
    <value>:white_check_mark: I've got a response! Here it is.</value>
    <comment/>
  </data>
  <data name="GPTAskError" xml:space="preserve">
    <value>:x: Uh-oh, something went wrong. Error:</value>
    <comment/>
  </data>
  <data name="GelbooruAPITitle" xml:space="preserve">
    <value>Gelbooru</value>
    <comment/>
  </data>
  <data name="NSFWAPINotFound" xml:space="preserve">
    <value>:cry: Nothing found! Your tags:</value>
    <comment/>
  </data>
  <data name="NSFWAPIError" xml:space="preserve">
    <value>:x: An error has occured! Maybe an API is down.</value>
    <comment/>
  </data>
  <data name="NSFWCommandTitle" xml:space="preserve">
    <value>NSFW Content</value>
    <comment/>
  </data>
  <data name="NSFWCommandChannelError" xml:space="preserve">
    <value>:warning: This command can only be used in NSFW channels!</value>
    <comment/>
  </data>
  <data name="Rule34APITitle" xml:space="preserve">
    <value>Rule34</value>
    <comment/>
  </data>
  <data name="HelpNSFWCommands" xml:space="preserve">
    <value>NSFW Commands</value>
    <comment/>
  </data>
  <data name="HelpNSFWCommandsList" xml:space="preserve">
    <value>All of this commands can only be used in NSFW channels.	ass -  Ass picture or gif.	anal - Anal picture or gif.	sex - Sex gif.	masturbation - Masturbation picture or gif.	panties - Panties picture or gif.	pussy - Pussy picture or gif.	blowjob - Blowjob picture or gif.	footjob - Footjob picture or gif.	handjob - Handjob picture or gif.	boobs - Boobs picture or gif.	thighs - Thighs picture or gif.	neko - NSFW picture or gif with neko.	hentai - Random hentai picture or gif.	incest - Incest picture or gif.	yuri - Yuri picture or gif.	femboy - Femboy picture.	paizuri - Boobjob picture.	kitsune - Kitsune picture.	gelbooru - Get post with your tags from Gelbooru.	rule34 - Get post with your tags from Rule34.xxx</value>
    <comment/>
  </data>
  <data name="HelpNSFW" xml:space="preserve">
    <value>Use command - a!help nsfw</value>
    <comment/>
  </data>
  <data name="MusicTitle" xml:space="preserve">
    <value>:musical_note: Music Player</value>
    <comment/>
  </data>
  <data name="MusicNoResults" xml:space="preserve">
    <value>:warning: Nothing found by this query:</value>
    <comment/>
  </data>
  <data name="MusicNowPlaying" xml:space="preserve">
    <value>**Now playing:**</value>
    <comment/>
  </data>
  <data name="MusicPlay" xml:space="preserve">
    <value>:sound: Play song.</value>
    <comment/>
  </data>
  <data name="MusicStop" xml:space="preserve">
    <value>:mute: Stop playback.</value>
    <comment/>
  </data>
  <data name="MusicNothingPlaying" xml:space="preserve">
    <value>Nothing playing.</value>
    <comment/>
  </data>
  <data name="MusicStoppedPlaying" xml:space="preserve">
    <value>Stopped playback.</value>
    <comment/>
  </data>
  <data name="MusicResume" xml:space="preserve">
    <value>:sound: Resume playback.</value>
    <comment/>
  </data>
  <data name="MusicPause" xml:space="preserve">
    <value>:speaker: Pause playback.</value>
    <comment/>
  </data>
  <data name="MusicResumed" xml:space="preserve">
    <value>Playback resumed.</value>
    <comment/>
  </data>
  <data name="MusicPaused" xml:space="preserve">
    <value>Playback paused.</value>
    <comment/>
  </data>
  <data name="MusicAlreadyResumed" xml:space="preserve">
    <value>Playback is not paused.</value>
    <comment/>
  </data>
  <data name="MusicAlreadyPaused" xml:space="preserve">
    <value>Playback is already paused.</value>
    <comment/>
  </data>
  <data name="MusicSkip" xml:space="preserve">
    <value>:arrow_forward: Skip song.</value>
    <comment/>
  </data>
  <data name="MusicSkipped" xml:space="preserve">
    <value>**Skipped:**</value>
    <comment/>
  </data>
  <data name="MusicPosition" xml:space="preserve">
    <value>Playback position.</value>
    <comment/>
  </data>
  <data name="MusicPositionText" xml:space="preserve">
    <value>**Playback position:**</value>
    <comment/>
  </data>
  <data name="MusicList" xml:space="preserve">
    <value>Queue.</value>
    <comment/>
  </data>
  <data name="MusicQueueEmpty" xml:space="preserve">
    <value>Queue is empty.</value>
    <comment/>
  </data>
  <data name="MusicLeave" xml:space="preserve">
    <value>Leave voice channel.</value>
    <comment/>
  </data>
  <data name="MusicLeft" xml:space="preserve">
    <value>Left voice channel.</value>
    <comment/>
  </data>
  <data name="MusicRemove" xml:space="preserve">
    <value>Remove from queue.</value>
    <comment/>
  </data>
  <data name="MusicRemoveIndexZero" xml:space="preserve">
    <value>Track number cannot be zero.</value>
    <comment/>
  </data>
  <data name="MusicSongDoesntExist" xml:space="preserve">
    <value>Song doesn't exist.</value>
    <comment/>
  </data>
  <data name="MusicRemoved" xml:space="preserve">
    <value>**Removed from queue:**</value>
    <comment/>
  </data>
  <data name="MusicError" xml:space="preserve">
    <value>:warning: Error</value>
    <comment/>
  </data>
  <data name="MusicUserNull" xml:space="preserve">
    <value>You are not in voice channel.</value>
    <comment/>
  </data>
  <data name="MusicBotNull" xml:space="preserve">
    <value>I'm not in voice channel.</value>
    <comment/>
  </data>
  <data name="MusicUnknownError" xml:space="preserve">
    <value>:x: Unknown error!</value>
    <comment/>
  </data>
</root>